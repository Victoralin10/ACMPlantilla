[Data Structures]
dataStructures/BIT.cpp  Binary Indexed Tree (BIT) O(n*log(n))
dataStructures/CentroidDecomposition.cpp    CentroidDecomposition O(n*log(n))
dataStructures/HeavyLightDecomposition_Lazy.cpp     Heavy Light Decomposition + Lazy O(n*log(n^2))
dataStructures/HeavyLightDecomposition_onEdges.cpp      HeavyLightDecomp on Edges O(n*log(n)^2)
dataStructures/HeavyLightDecomposition.cpp      Heavy Light Decompostion O(n*log(n)^2)
dataStructures/ImplicidTreap.cpp	ImplicidTreap
dataStructures/ImplicitSegmentTree.cpp	Implicit Segment Tree O(n*log(n))
dataStructures/ImplicitSegTree_LazyPropag.cpp	ImplicitSegTree with Lazy Propagation O(n*log(n))
dataStructures/JoshuasSegmentTreeWithLazy.cpp	Joshua's Segment Tree with Lazy (APIsh)
dataStructures/LCA.cpp	LCA preprocess:O(n*log(n)), query: O(log(n))
dataStructures/LinkCutTree_connectivity.cpp	LinkCutTree connectivity O(log n) amortized for all other operations
dataStructures/LinkCutTree_dynalca.cpp	LinkCutTree dynalca O(log n) amortized for all other operations
dataStructures/MOAlgorithm.cpp	MO Algorithm O(n*sqrt(n)*k) k: complexity of operation add or quit
dataStructures/PersistantSegTree_inTree.cpp	PersistantSegTree inTree O(n*log(n))
dataStructures/PersistantSegTree.cpp	Persistant Segment Tree O(n*log(n))
dataStructures/SegmentTree_LazyPropagation.cpp	SegmentTree + LazyPropagation O(n*log(n))
dataStructures/SegmentTree.cpp	SegmentTree O(n*log(n))
dataStructures/SparseTable1.cpp	SparseTable1 preprocess:O(n*log(n)), query: O(k) k ~ 2
dataStructures/SparseTable2.cpp	SparseTable2 preprocess:O(n*log(n)), query: O(log(n))
dataStructures/Treap.cpp	Treap

[Math]
math/ExtendedEuclid.cpp	Extended Euclid's Algorithm
math/PollardRho.cpp	PollardRho + MillerRabin
math/Sieve.cpp	Sieve
math/FermatsLittleTheorem.cpp	Fermat's Little Theorem
math/EulersTheorem.cpp	Euler's Theorem
math/ChineseRemainder.cpp	Chinese Remainder Theorem
math/PhiSieve.cpp	Phi Sieve
math/LinearSieve.cpp	Linear Sieve and logarithmic factorization
math/FFT.cpp	Fast Fourier Transform
math/ModularInverse.cpp	Modular inverse
math/Mobius.cpp	Mobius Function
math/PhillaiSieve.cpp	Phillai Sieve
math/LucasTheorem.cpp	Lucas Theorem (small prime moduli and big n and k)
math/Formulas.cpp	Catalan, dearrangements and other formulas

[Flows]
flows/Dinic.cpp	Dinic (Also maximum bipartite matching)
flows/MaxFlowToConstrainedCost.cpp	Maximum Flow with upper bound cost
flows/MaxFlowMinCost.cpp	Minimun Cost Maximum Flow
flows/Hungarian.cpp	Hungarian Algorithm

[Graphs]
graphs/BiconnectedComponents.cpp	Biconnected Components, bridges and articulation points O(E + V)
graphs/BiconnectedComponents_bryan.cpp      Bryan Biconnected Components O(E + V)
graphs/Articulation_bryan.cpp   Bryan Articulation O(E + V)
graphs/BridgeTree.cpp    Bryan Bridge Tree O(E + V)
graphs/Dijkstra.cpp     Dijkstra O((n + m)*log(n))
graphs/Johnson.cpp      Johnson O(n*m*log(n))
graphs/BellmanFord.cpp  Bellman Ford (and applications) O(n*m)
graphs/SPFA.cpp     Shortest Path Fast Algorithm O(k*m) k ~ 2
graphs/SPFA_findCicle.cpp   Shortest Path Fast Algorithm find Cicle O(k*m) k ~ 2
graphs/FloydWarshall.cpp	Floyd Warshall
graphs/SCC.cpp	SCC (Strongly Connected Components)
graphs/Tarjan_bryan.cpp     Bryan Tarjan O(E + V)
graphs/2sat.cpp	2-SAT (with value assignation)
graphs/UnionFind.cpp	Union - Find
graphs/EulerPath.cpp	Euler Path
graphs/TopologicalSort.cpp	Topological Sort
graphs/TopologicalSort_bryan.cpp    Bryan Topological Sort O(N)
graphs/AdjacencyMatrix.cpp	Adjacency Matrix
graphs/Kruskal.cpp	Kruskal (Minimum Spanning Tree)

[Games]
games/MisereNim.cpp	Nim de la miseria

[DP]
dp/SubsetForTrick.cpp	Subsets of the subsets iteration
dp/LCS.cpp  Longest Common Subsecuence O(n * m) / SuffixArray O((n + m)*log(n + m))
dp/LIS.cpp  Longest Increasing Subsecuence O(n*log(n))
dp/Iterative.cpp    DP Iterative
dp/savingMemory.cpp     Saving Memory
dp/SubsetSum.cpp    Subset Sum _ Meet in the Meedle

[Strings]
strings/AhoCorasick.cpp	AhoCorasick
strings/SuffixAutomata.cpp	SuffixAutomata
strings/KMP.cpp     Knuth Morris Pratt(KMP) O(n + m)
strings/Zeta.cpp    ZETA Algorithm O(n + m)
strings/Trie.cpp    Trie O(N) N: Cantidad de caracteres en el diccionario
strings/ImplicitTrie.cpp    Implicit Trie
strings/PersistantTrie.cpp    Persistant Trie
strings/SuffixArray.cpp     Suffix Array + LCP + RMQ

[Search]
search/TernaryS.cpp	Ternary Search

[Geometry]
geometria/geo-enteros.cpp	geo-enteros
geometria/geo-reales.cpp	geo-reales
geometria/closest-pairs.cpp	closest-pairs
geometria/ConvexHullTrick.cpp	Convex Hull Trick

[Others]
others/CoordinateCompression.cpp    Coordinate Compression
others/meetInTheMiddle.cpp  Meet in the Middle
others/RomanNumerals.cpp    Roman Numerals
others/OrderedSet.cpp   Ordered Set
others/Scanf.cpp    Scanf
others/Random.cpp   Random

[Techniques]
../techniques.txt	Various algorithm techniques
